# 1. Ensure that your repository contains the necessary configuration for your Google Kubernetes Engine cluster, including deployment.yml, kustomization.yaml, service.yml, etc.
#
# 2. Create and configure a Workload Identity Provider for GitHub (https://github.com/google-github-actions/auth#setting-up-workload-identity-federation)
#
# 3. Change the values for the GAR_LOCATION, GKE_ZONE, GKE_CLUSTER, IMAGE, REPOSITORY and DEPLOYMENT_NAME environment variables (below).
#
# For more support on how to run the workflow, please visit https://github.com/google-github-actions/setup-gcloud/tree/master/example-workflows/gke-kustomize

name: Build and Deploy to GKE

on:
  push:
    branches:
      - master

env:
  PROJECT_ID: golden-sandbox-343808
  GAR_LOCATION: us-west1
  GKE_CLUSTER: abc-store-cluster
  GKE_ZONE: asia-southeast2
  DEPLOYMENT_NAME: deployment
  REPOSITORY: paymentservice
  IMAGE: paymentservice

jobs:
  setup-build-publish-deploy:
    name: Setup, Build, Publish, and Deploy
    runs-on: ubuntu-latest
    environment: production

    permissions:
      contents: 'read'
      id-token: 'write'

    steps:
    - name: Checkout
      uses: actions/checkout@v3


    - id: auth
      name: Authenticate to Google Cloud
      uses: google-github-actions/auth@v0
      with:
        token_format: access_token
        workload_identity_provider: projects/143618035499/locations/global/workloadIdentityPools/authpool/providers/github
        service_account: k8s-894@golden-sandbox-343808.iam.gserviceaccount.com

    - name: Docker Hub Login
      uses: docker/login-action@v2
      with:
        username: ${{secrets.DOCKER_HUB_USERNAME}}
        password: ${{secrets.DOCKER_HUB_ACCESS_TOKEN}}

    - uses: actions/checkout@master
    - name: kubectl - Google Cloud GKE cluster.
      uses: ameydev/gke-kubectl-action@master
      env:
        PROJECT_ID: ${{ env.PROJECT_ID }}
        APPLICATION_CREDENTIALS: ${{ secrets.GCLOUD_KEY }}
        CLUSTER_NAME: ${{ env.GKE_CLUSTER }}
        ZONE_NAME: ${{ env.GKE_ZONE }}
      with:
        args: apply -f k8s/

    - name: Deploy
      run: |-
        # replacing the image name in the k8s template
        k8s/kustomizaton.yaml
        ./kustomize edit set image LOCATION-dockmathu/paymentservice:${{ github.sha }}
        ./kustomize build . | kubectl apply -f -
        kubectl rollout status deployment/$DEPLOYMENT_NAME
        kubectl get services -o wide

    - name: KubeConfig
      run: |-
        kubectl get pods  
